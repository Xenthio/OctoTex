#usda 1.0
(
    customLayerData = {
        uint64 geometrydescriptor = 12390887376929418435
        uint64 indices = 0
        uint64 legacyindices = 0
        uint64 legacypositions0 = 0
        uint64 legacypositions1 = 0
        uint64 positions = 3802348505311974908
        uint64 texcoords = 13000444729641136549
        uint64 vertexlayout = 5377511480456297298
        uint64 vertexshader = 0
    }
    defaultPrim = "mesh_2FAE2B08D2BB51B9"
    doc = """Generated from Composed Stage of root layer /media/alex/659fae43-74ac-417d-a863-e458d68e104f/SteamLibrary/steamapps/common/Sonic Adventure DX/rtx-remix/captures/meshes/mesh_2FAE2B08D2BB51B9.usd
"""
    metersPerUnit = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "mesh_2FAE2B08D2BB51B9"
{
    rel material:binding = </Looks/mat_274DFCFD843F89D8>
    token visibility = "inherited"

    def Mesh "mesh"
    {
        uniform bool doubleSided = 0
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 1, 3, 2, 2, 3, 4, 3, 5, 4, 4, 5, 6, 5, 7, 6, 6, 7, 8, 7, 9, 8, 8, 9, 10, 9, 11, 10, 10, 11, 12, 11, 13, 12, 12, 13, 14, 13, 15, 14, 14, 15, 16, 15, 17, 16, 16, 17, 18, 17, 19, 18, 18, 19, 20, 19, 21, 20, 20, 21, 22, 21, 23, 22, 22, 23, 24, 23, 25, 24, 24, 25, 26, 25, 27, 26, 26, 27, 28, 27, 29, 28, 28, 29, 30, 29, 31, 30, 30, 31, 32, 31, 33, 32, 32, 33, 34, 33, 35, 34, 34, 35, 36, 35, 37, 36, 36, 37, 38, 37, 39, 38, 38, 39, 40, 39, 41, 40, 40, 41, 42, 41, 43, 42, 42, 43, 44, 43, 45, 44, 44, 45, 46, 45, 47, 46, 46, 47, 48, 47, 49, 48, 48, 49, 50, 49, 51, 50, 50, 51, 52, 51, 53, 52, 52, 53, 54, 53, 55, 54, 54, 55, 56, 55, 57, 56, 56, 57, 58, 57, 59, 58, 58, 59, 60, 59, 61, 60, 60, 61, 62, 61, 63, 62, 62, 63, 64, 63, 65, 64, 64, 65, 66, 65, 67, 66, 66, 67, 68, 67, 69, 68, 68, 69, 70, 69, 71, 70, 70, 71, 72, 71, 73, 72]
        normal3f[] normals = [(0.003265, 0.714031, 0.700106), (0.003265, 0.714031, 0.700106), (-0.000002, 0.707107, 0.707106), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0.003389, 0.686813, 0.726827), (0.003389, 0.686813, 0.726827), (0.003265, 0.714031, 0.700106), (0.007018, 0.661866, 0.74959), (0.007018, 0.661866, 0.74959), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0, 1), (0, 0.707107, 0.707107), (-0.000003, 0, 1), (-0.000002, 0.707107, 0.707106), (-0.000003, 0, 1), (-0.000002, 0.707106, 0.707107), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0, 1), (0, 0, 1), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (-0.000002, 0.707106, 0.707107), (-0.000002, 0.707107, 0.707106), (-0.000002, 0.707107, 0.707106), (-0.000002, 0.707106, 0.707107), (0.003265, 0.714031, 0.700106), (0.003395, 0.685568, 0.728001), (0.003389, 0.686813, 0.726827), (0.003395, 0.685568, 0.728001), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107), (0, 0.707107, 0.707107)]
        uniform token orientation = "leftHanded"
        point3f[] points = [(-109.99988, 9, -60), (-109.99988, 9, -60), (-99.99988, 9, -60), (-101.12288, 9, -60), (-101.12288, 9, -60), (-149.99976, 9, -60), (-149.99976, 9, -60), (-109.99988, 9, -60), (-111.558426, 9, -59.610905), (-111.558426, 9, -59.610905), (0.000004, 9, -59.999767), (0.000004, 9, -59.999767), (-4.999991, 9, -59.999767), (0.000004, 6, -59.999767), (-5.061336, 6, -59.999767), (-5.061336, 6, -59.999767), (-109.99988, 0, -40), (-109.99988, 0, -40), (-109.99988, 6, -40), (-99.99988, 0, -40), (-99.99988, 6, -40), (-59.99994, 0, -39.999767), (-59.99994, 6, -39.999767), (-49.99994, 0, -39.999767), (-49.99994, 6, -39.999767), (-9.999998, 0, -39.999767), (-9.999998, 6, -39.999767), (-0.00002, 0, -39.999767), (-0.00002, 6, -39.999767), (-0.00002, 6, -39.999767), (-109.99988, 0, -40), (-109.99988, 0, -40), (-109.99988, 6, -40), (-149.99976, 6, -40), (-149.99976, 6, -40), (-209.99976, 0, -40), (-209.99976, 0, -40), (-209.99976, 6, -40), (-199.99976, 0, -40), (-199.99976, 6, -40), (-159.99976, 0, -40), (-159.99976, 6, -40), (-149.99976, 0, -40), (-149.99976, 6, -40), (-109.99988, 0, -40), (-109.99988, 0, -40), (-12.257996, 9, -59.999767), (-12.257996, 9, -59.999767), (-11.414001, 6, -59.999767), (-49.99994, 9, -59.999767), (-49.99994, 6, -59.999767), (-59.99994, 9, -59.999767), (-59.99994, 6, -59.999767), (-99.99988, 9, -60), (-99.99988, 6, -60), (-109.99988, 9, -60), (-109.99988, 6, -60), (-149.99976, 9, -60), (-149.99976, 6, -60), (-159.99976, 9, -60), (-159.99976, 6, -60), (-199.99976, 9, -60), (-199.99976, 6, -60), (-209.99976, 9, -60), (-209.99976, 6, -60), (-209.99976, 6, -60), (-4.999991, 9, -59.999767), (-4.999991, 9, -59.999767), (-5.061336, 6, -59.999767), (-9.999983, 9, -59.999767), (-9.999983, 6, -59.999767), (-12.257996, 9, -59.999767), (-11.414001, 6, -59.999767), (-11.414001, 6, -59.999767)]
        color3f[] primvars:displayColor = [(0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.99609375, 0.99609375, 0.99609375), (0.99609375, 0.99609375, 0.99609375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.99609375, 0.99609375), (0.99609375, 0.99609375, 0.99609375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.6953125, 0.6953125, 0.6953125), (0.6953125, 0.6953125, 0.6953125), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.96484375, 0.87109375), (0.99609375, 0.99609375, 0.99609375), (0.99609375, 0.99609375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.87109375, 0.93359375, 0.99609375), (0.58203125, 0.5546875, 0.60546875), (0.58203125, 0.5546875, 0.60546875), (0.58203125, 0.5546875, 0.60546875), (0.58203125, 0.5546875, 0.60546875), (0.58203125, 0.5546875, 0.60546875), (0.58203125, 0.5546875, 0.60546875), (0.58203125, 0.5546875, 0.60546875), (0.58203125, 0.5546875, 0.60546875)] (
            interpolation = "vertex"
        )
        texCoord2f[] primvars:st = [(9.521569, 1), (9.521569, 1), (10.47451, 1), (10.3686285, 1), (10.3686285, 1), (5.713726, 1), (5.713726, 1), (9.521569, 1), (8.980392, 1), (8.980392, 1), (19.99608, 1), (19.99608, 1), (19.52157, 1), (19.99608, 0), (19.517649, 0), (19.517649, 0), (9.521569, 0.003921509), (9.521569, 0.003921509), (9.521569, 1), (10.47451, 0.003921509), (10.47451, 1), (14.282353, 0.003921509), (14.282353, 1), (15.235295, 0.003921509), (15.235295, 1), (19.04706, 0.003921509), (19.04706, 1), (19.99608, 0.003921509), (19.99608, 1), (19.99608, 1), (9.521569, 0.003921509), (9.521569, 0.003921509), (9.521569, 1), (5.713726, 1), (5.713726, 1), (0, 0.003921509), (0, 0.003921509), (0, 1), (0.9490197, 0.003921509), (0.9490197, 1), (4.7607846, 0.003921509), (4.7607846, 1), (5.713726, 0.003921509), (5.713726, 1), (9.521569, 0.003921509), (9.521569, 0.003921509), (18.831373, 1), (18.831373, 1), (18.909805, 0), (15.235295, 1), (15.235295, 0), (14.282353, 1), (14.282353, 0), (10.47451, 1), (10.47451, 0), (9.521569, 1), (9.521569, 0), (5.713726, 1), (5.713726, 0), (4.7607846, 1), (4.7607846, 0), (0.9490197, 1), (0.9490197, 0), (0, 1), (0, 0), (0, 0), (19.52157, 1), (19.52157, 1), (19.517649, 0), (19.04706, 1), (19.04706, 0), (18.831373, 1), (18.909805, 0), (18.909805, 0)] (
            interpolation = "vertex"
        )
        uniform token subdivisionScheme = "none"
        token visibility = "inherited"
    }
}

def "Looks"
{
    def Material "mat_274DFCFD843F89D8"
    {
    }
}

